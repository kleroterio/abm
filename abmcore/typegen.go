// Code generated by "core generate"; DO NOT EDIT.

package abmcore

import (
	"cogentcore.org/core/tree"
	"cogentcore.org/core/types"
	"github.com/kleroterio/abm/abm"
)

var _ = types.AddType(&types.Type{Name: "github.com/kleroterio/abm/abmcore.Sim2D", IDName: "sim2-d", Doc: "Sim2D implements a plot-based 2D representation of an agent-based model simulation.", Embeds: []types.Field{{Name: "Splits"}}, Fields: []types.Field{{Name: "Sim", Doc: "Sim is the simulation that this 2D representation is based on."}}})

// NewSim2D returns a new [Sim2D] with the given optional parent:
// Sim2D implements a plot-based 2D representation of an agent-based model simulation.
func NewSim2D(parent ...tree.Node) *Sim2D { return tree.New[Sim2D](parent...) }

// SetSim sets the [Sim2D.Sim]:
// Sim is the simulation that this 2D representation is based on.
func (t *Sim2D) SetSim(v abm.Sim) *Sim2D { t.Sim = v; return t }

var _ = types.AddType(&types.Type{Name: "github.com/kleroterio/abm/abmcore.Spatial2D", IDName: "spatial2-d", Doc: "Spatial2D is a 2d plot of a simulation based on the [abm.AgentBase.Position].", Embeds: []types.Field{{Name: "Frame"}}, Fields: []types.Field{{Name: "Sim", Doc: "Sim is the simulation that this 2D representation is based on."}, {Name: "Mode", Doc: "Mode is the current preset plotting mode."}, {Name: "table", Doc: "table is the data table for plotting."}, {Name: "plot", Doc: "plot is the plot editor widget."}}})

// NewSpatial2D returns a new [Spatial2D] with the given optional parent:
// Spatial2D is a 2d plot of a simulation based on the [abm.AgentBase.Position].
func NewSpatial2D(parent ...tree.Node) *Spatial2D { return tree.New[Spatial2D](parent...) }

// SetSim sets the [Spatial2D.Sim]:
// Sim is the simulation that this 2D representation is based on.
func (t *Spatial2D) SetSim(v abm.Sim) *Spatial2D { t.Sim = v; return t }

// SetMode sets the [Spatial2D.Mode]:
// Mode is the current preset plotting mode.
func (t *Spatial2D) SetMode(v Modes) *Spatial2D { t.Mode = v; return t }
